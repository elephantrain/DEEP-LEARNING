import cv2
import os
from osgeo import gdal


def crop_one_picture(path, filename, cols, rows):
    # im_width = dataset.RasterXSize  # 栅格矩阵的列数
    # im_height = dataset.RasterYSize  # 栅格矩阵的行数
    # im_geotrans = dataset.GetGeoTransform()  # 仿射矩阵
    # im_proj = dataset.GetProjection()  # 地图投影信息
    # im_data = dataset.ReadAsArray(0, 0, im_width, im_height)

    img = cv2.imread(path + filename, -1)##读取彩色图像，图像的透明度(alpha通道)被忽略，默认参数;灰度图像;读取原始图像，包括alpha通道;可以用1，0，-1来表示
    sum_rows = img.shape[0]  # 高度
    sum_cols = img.shape[1]  # 宽度
    save_path = path + "\\crop{0}_{1}\\".format(cols, rows)  # 保存的路径
    if not os.path.exists(save_path):
        os.makedirs(save_path)
    print("裁剪所得{0}列图片，{1}行图片.".format(int(sum_cols / cols), int(sum_rows / rows)))

    for i in range(int(sum_cols / cols)):
        for j in range(int(sum_rows / rows)):
            cv2.imwrite(
                save_path + os.path.splitext(filename)[0] + '_' + str(j) + '_' + str(i) + os.path.splitext(filename)[1],
                img[j * rows:(j + 1) * rows, i * cols:(i + 1) * cols, :])

            #     save_path + str(j) + '_' + str(i) + os.path.splitext(filename)[1],
            #     img[j * rows:(j + 1) * rows, i * cols:(i + 1) * cols, :])
            # print(path+"\crop\\"+os.path.splitext(filename)[0]+'_'+str(j)+'_'+str(i)+os.path.splitext(filename)[1])
    print("裁剪完成，得到{0}张图片.".format(int(sum_cols / cols) * int(sum_rows / rows)))
    print("文件保存在{0}".format(save_path))



if __name__ == '__main__':
    path = '.\\sample\\'  # 要裁剪的图片所在的文件夹
    filename = 'wuchang1.jpg' # 度（列数）
    rows = 400  # 小图片的高度（行数）
    crop_one_picture(path, filename, 400, 400)
