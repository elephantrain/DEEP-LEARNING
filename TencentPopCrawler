# encoding: utf-8
import json
import requests
import time
import pandas as pd


def getRealTimeTecentPopulation(lng_bound, lat_bound, save_path="", count=4, rank=0, time_interval=30):
    """
    implementation of crawling real time tencent location-based service population.

    # Args:
        :param lng_bound: list of 2 float numbers, boundary of longitude
        :param lat_bound: list of 2 float numbers, boundary of latitude
        :param save_path: string, file path to save the result
        :param time_interval: int, time interval (minutes)
    # Returns:
        None
    """
    url = 'https://xingyun.map.qq.com/api/getXingyunPoints'
    paload = {'count': count, 'rank': rank}
    prev_tmin = -1
    while 1:
        # 隔半小时抓取一次
        t = time.localtime(time.time())
        # 两种情况需要等待60s：（1）非整点；（2）当前时间（分钟）与上一次相同
        if (t.tm_min == prev_tmin or t.tm_min%time_interval != 0):
            print("now time is {}-{}-{} {}:{}:{}, waiting...".format(t.tm_year, t.tm_mon, t.tm_mday, t.tm_hour, t.tm_min, t.tm_sec))
            time.sleep(60)
        else:
            prev_tmin = t.tm_min
            response = requests.post(url, data=json.dumps(paload))
            data = json.loads(response.text)  # dumps是将dict转化成str格式，loads是将str转化成dict格式

            _time = data["time"]
            locs = data["locs"]
            print("now time is {}, crawling data...".format(_time))

            locss = locs.split(",")
            temp = []
            for i in range(int(len(locss) / 3)):
                lat = locss[0 + 3 * i]
                lon = locss[1 + 3 * i]
                _count = locss[2 + 3 * i]
                if (lat_bound[0] * 100 <= int(lat) <= lat_bound[1] * 100 and lng_bound[0] * 100 <= int(lon) <=
                        lng_bound[1] * 100):
                    temp.append([_time, float(lat) / 100, float(lon) / 100, _count])  # 容器追加四个字段的数据：时间，纬度，经度和定位次数

            result = pd.DataFrame(temp)
            result.dropna()
            result.columns = ['time', 'lat', 'lon', 'count']
            result.to_csv(save_path + "/%s.csv" % _time.replace(":", ""), mode='a', index=False, header=False)


if __name__ == "__main__":
    while True:
        try:
            getRealTimeTecentPopulation(lng_bound=[73.557701, 134.773926], lat_bound=[18.159306, 53.560860],
                                        save_path="F:/Data/tencent_population", time_interval=30)
        except:
            pass
